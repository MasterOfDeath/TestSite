@using TestSite.PL.WebPages.Models
@using TestSite.Variables
@{
    if (!User.Identity.IsAuthenticated)
    {
        Response.StatusCode = 401;
        return;
    }

    var queries = new Dictionary<int, IDictionary<string, Func<HttpRequestBase, AjaxResponse>>>()
    {
        { Variables.AdminRole.Id,  AdminsAjaxPage.AdminsQueries },
        { Variables.SuperadminRole.Id, AdminsAjaxPage.SuperadminsQueries },
        { Variables.InspectorRole.Id, AdminsAjaxPage.InspectorsQueries },
    };

    int usersRoleId = -1;

    try
    {
        var userId = Convert.ToInt32(User.Identity.Name);
        usersRoleId = LogicProvider.EmployeeLogic.GetEmployeeById(userId).Role_Id;
    }
    catch (Exception ex)
    {
        Response.Write(Json.Encode(new AjaxResponse(ex.Message)));
    }

    var queryName = Request["queryName"];

    if (IsAjax && queryName != null)
    {
        AjaxResponse result = new AjaxResponse(null, null);

        if (queries[usersRoleId].ContainsKey(queryName))
        {
            result = queries[usersRoleId][queryName].Invoke(Request);
        }
        else
        {
            Response.Write(Json.Encode(new AjaxResponse("Не достаточно прав")));
            return;
        }

        if (result != null)
        {
            Response.Write(Json.Encode(result));
        }
    }
}
